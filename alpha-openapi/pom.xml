<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com</groupId>
        <artifactId>Alpha</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>alpha-openapi</artifactId>
    <name>alpha-openapi</name>
    <packaging>jar</packaging>
    <url>http://maven.apache.org</url>

    <dependencies>
        <!-- Vos dépendances existantes -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.15.0</version>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.3.2</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>24.0.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>0.2.6</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>2.2.8</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>3.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>2.1.1</version>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>5.0.0</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <configuration>
                        <delimiters>
                            <delimiter>@</delimiter>
                        </delimiters>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- 1) Plugin maven-resources-plugin pour copier + filtrer tout openapi/ -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>filter-openapi</id>
                        <!-- On lance ce filtrage pendant generate-sources,
                             pour que le plugin OpenAPI lise la version filtrée. -->
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>resources</goal>
                        </goals>
                        <configuration>
                            <!-- Répertoire de sortie où seront copiés les fichiers filtrés -->
                            <outputDirectory>${project.build.directory}/filtered-openapi</outputDirectory>
                            <resources>
                                <resource>
                                    <!-- On copie tout le dossier openapi (y compris components/) -->
                                    <directory>src/main/resources/openapi</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <!-- On inclut tous les fichiers YAML/YML pour gérer les références relatives -->
                                        <include>**/*.yaml</include>
                                        <include>**/*.yml</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- 2) Plugin openapi-generator qui lit la version filtrée de openapi.yaml -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>7.0.1</version>
                <executions>
                    <!-- Génération du code Spring -->
                    <execution>
                        <id>generate-spring</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- IMPORTANT : on pointe vers le fichier filtré dans target/filtered-openapi -->
                            <inputSpec>${project.build.directory}/filtered-openapi/openapi.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <cleanupOutput>true</cleanupOutput>
                            <output>${project.build.directory}/generated-sources/spring</output>
                            <apiPackage>com.alpha.generated.api</apiPackage>
                            <modelPackage>com.alpha.generated.model</modelPackage>
                            <invokerPackage>com.alpha.generated.invoker</invokerPackage>
                            <configOptions>
                                <interfaceOnly>true</interfaceOnly>
                                <skipDefaultInterface>true</skipDefaultInterface>
                                <useTags>true</useTags>
                                <dateLibrary>java8</dateLibrary>
                                <generateClientAsBean>true</generateClientAsBean>
                                <useJakartaEe>true</useJakartaEe>
                                <delegatePattern>true</delegatePattern>
                                <generateApis>true</generateApis>
                                <generateModels>true</generateModels>
                                <generateSupportingFiles>false</generateSupportingFiles>
                            </configOptions>
                            <additionalProperties>
                                <dateTimeType>Instant</dateTimeType>
                            </additionalProperties>
                        </configuration>
                    </execution>

                    <!-- Génération du code TypeScript Axios -->
                    <execution>
                        <id>generate-typescript</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.build.directory}/filtered-openapi/openapi.yaml</inputSpec>
                            <generatorName>typescript-axios</generatorName>
                            <output>${project.parent.basedir}/alpha-frontend/src/main/webapp/app/src/generated</output>
                            <configOptions>
                                <modelPropertyNaming>camelCase</modelPropertyNaming>
                                <supportsES6>true</supportsES6>
                                <framework>axios</framework>
                                <enumPropertyNaming>camelCase</enumPropertyNaming>
                                <useSingleRequestParameter>true</useSingleRequestParameter>
                                <useSeparateModels>true</useSeparateModels>
                                <useSeparateApis>true</useSeparateApis>
                                <generateApis>true</generateApis>
                                <generateModels>true</generateModels>
                                <generateSupportingFiles>false</generateSupportingFiles>
                                <modelFileSuffix>Dto.ts</modelFileSuffix>
                                <apiFileSuffix>Service.ts</apiFileSuffix>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
